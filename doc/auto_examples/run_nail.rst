
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_nail.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_run_nail.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_nail.py:


ICSD: calibration in water
==========================

This example illustrate the use of the ICSD code for a calibration experiment consisting in emerging an isolate cable in a box filled with water. 
The tip of the cable release the current into the water. The aim is to find the location of the cable tip after measuring the potentials at different location of the box.
For further information see Peruzzo et al. (2019)

.. GENERATED FROM PYTHON SOURCE LINES 9-56



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_001.png
         :alt: Estimated m0  T0
         :srcset: /auto_examples/images/sphx_glr_run_nail_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_002.png
         :alt: Estimated m0  T0
         :srcset: /auto_examples/images/sphx_glr_run_nail_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_003.png
         :alt: CSD 2d T0  $\lambda$=1
         :srcset: /auto_examples/images/sphx_glr_run_nail_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_004.png
         :alt: CSD 2d T0  $\lambda$=1
         :srcset: /auto_examples/images/sphx_glr_run_nail_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_005.png
         :alt: $\lambda$=0.01
         :srcset: /auto_examples/images/sphx_glr_run_nail_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_006.png
         :alt: $\lambda$=1.12
         :srcset: /auto_examples/images/sphx_glr_run_nail_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_007.png
         :alt: $\lambda$=2.23
         :srcset: /auto_examples/images/sphx_glr_run_nail_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_008.png
         :alt: $\lambda$=3.34
         :srcset: /auto_examples/images/sphx_glr_run_nail_008.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_009.png
         :alt: $\lambda$=4.45
         :srcset: /auto_examples/images/sphx_glr_run_nail_009.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_010.png
         :alt: $\lambda$=5.5600000000000005
         :srcset: /auto_examples/images/sphx_glr_run_nail_010.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_011.png
         :alt: $\lambda$=6.67
         :srcset: /auto_examples/images/sphx_glr_run_nail_011.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_012.png
         :alt: $\lambda$=7.78
         :srcset: /auto_examples/images/sphx_glr_run_nail_012.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_013.png
         :alt: $\lambda$=8.89
         :srcset: /auto_examples/images/sphx_glr_run_nail_013.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_014.png
         :alt: $\lambda$=10.0
         :srcset: /auto_examples/images/sphx_glr_run_nail_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_015.png
         :alt: run nail
         :srcset: /auto_examples/images/sphx_glr_run_nail_015.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_016.png
         :alt: Normalized Knee Point
         :srcset: /auto_examples/images/sphx_glr_run_nail_016.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_run_nail_017.png
         :alt: CSD 2d T0  $\lambda$=6.67
         :srcset: /auto_examples/images/sphx_glr_run_nail_017.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    no existing survey
    initiation ICSD
    log transformation: False
    obs_err: sqrt
    True
    ./Cotton_Soil/nail1/
    x0_prior = False
    wr = 1
    run_single i=0
    UNconstrainsted inversion
    ********************
    CURRENT Sum=1.0000005098857252
    pareto weights are
     [ 0.01  1.12  2.23  3.34  4.45  5.56  6.67  7.78  8.89 10.  ]
    ********************
    CURRENT Sum=1.0000005099854388
    ********************
    CURRENT Sum=1.0000005098603633
    ********************
    CURRENT Sum=1.0000005094900062
    ********************
    CURRENT Sum=1.0000005088756687
    ********************
    CURRENT Sum=1.000000508019485
    ********************
    CURRENT Sum=1.0000005069243743
    ********************
    CURRENT Sum=1.0000005055939825
    ********************
    CURRENT Sum=1.000000504032606
    ********************
    CURRENT Sum=1.00000050224511
    ********************
    CURRENT Sum=1.000000500236835
    Knee detected for wr=6.67
    run_single i=0
    UNconstrainsted inversion
    ********************
    CURRENT Sum=1.0000005055939825






|

.. code-block:: default



    # Import packages
    import matplotlib.pyplot as plt
    from icsd.icsd3d import iCSD3d as i3d 
    from icsd.plotters import mpl_plot


    path2files="./Cotton_Soil/nail1/"

    icsd=i3d(dirName=path2files)   
    icsd.type='2d'
    icsd.obs_err='sqrt' # choose between constant weight and w = 1/sqrt(abs(obs))
    icsd.wr=1 #weight regularization
    icsd.alphaSxy=False
    icsd.x0_prior=False
    icsd.x0_ini_guess=False # initial guess

    # create a survey container
    icsd.createSurvey(fname_obs='ObsData.txt',fname_sim='VRTeSim.txt')

    # First method to estimate m0
    m0 = icsd.estimateM0(method_m0='F1',show=True)

    # Second method to estimate the initial model based on Pearson analysis
    m0 = icsd.estimateM0(method_m0='Pearson',show=True)

    # Invert the data
    sol= icsd.invert(x0_prior=False,wr=1)


    # Plot the results 
    fig, ax = plt.subplots()
    icsd.showResults(ax=ax)
    plt.show()


    # Another way to plot the result
    icsd.showResults()


    # Run pareto analysis between 0.01 to 10 of regularisation weight
    icsd.pareto_MinErr=0.01
    icsd.pareto_MaxErr=10
    icsd.pareto_nSteps=10
    icsd.run_pareto()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  19.786 seconds)


.. _sphx_glr_download_auto_examples_run_nail.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: run_nail.py <run_nail.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: run_nail.ipynb <run_nail.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
